# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# vi: ft=ruby

$:.unshift File.dirname(__FILE__)
require 'lib/utils.rb'

default_platform :ios

platform :ios do
  before_all do
     # Set project for commit_version_bump, which seems to get confused by projects in other folders
     ENV['FL_BUILD_NUMBER_PROJECT'] = "Wikipedia.xcodeproj"
     ensure_git_status_clean unless ENV['FL_NO_ENSURE_CLEAN']
  end

  desc "Runs linting (and eventually static analysis)"
  lane :analyze do
    make 'lint' unless test_disabled?
  end

  desc "Runs unit tests, optionally generating a JUnit report."
  lane :verify do |options|
    opts = {
      :scheme =>  options[:scheme] || 'Wikipedia',
      :workspace => 'Wikipedia.xcworkspace',
      :configuration => 'Debug',
      :destination => "platform=iOS Simulator,name=iPhone 6,OS=#{options[:sim_os] || '9.1'}",
      :destination_timeout => 240, # Increase timeout for Travis builds
      :xcpretty_output => 'simple',
      :buildlog_path => './build',
      :enable_code_coverage => true
    }
    opts[:reports] = [{ :report => 'junit', :output => 'build/reports/unit-tests.xml' }] if options[:junit]
    xctest(opts)
  end

  desc "Increment the app's build number without committing the changes. Returns a string of the new, bumped version."
  lane :bump do |options|
    opt_build_num = options[:build_number] || ENV['BUILD_NUMBER']
    if opt_build_num then
      increment_build_number(build_number: opt_build_num.to_i)
    else
      increment_build_number
    end
    "#{get_version_number}.#{get_build_number}"
  end

  desc "Returns a default changelog."
  lane :default_changelog do
    changelog = changelog_from_git_commits(
        between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || "HEAD^^^^^", "HEAD"],
        pretty: "- %s"
    )
    puts changelog
    changelog
  end

  desc "Submit a new **Wikipedia Beta** build to Apple TestFlight for internal testing."
  lane :alpha do
    new_version = bump

    sigh(
      adhoc: false,
      force: true
    )

    gym(
      configuration: "Beta",
      scheme: "Wikipedia Beta"
    )

    changelog = default_changelog

    hockey(
      public_identifier: '2295c3698bbd0b050f257772dd2bdbb2',
      notes: changelog,
      notify: '0', # Means do not notify
      status: '1', # Means do not make available for download
      upload_dsym_only: true
    )

    # Note: skipping submission means that the changelog isn't added
    # This isn't a beta, so we can't submit to external testers
    pilot(skip_submission: true)

    # all goes well, tag the new version on git
    add_git_tag(tag: new_version)
    push_to_git_remote
  end

  desc "Submit a new **Wikipedia Beta** build to Apple TestFlight for external testing."
  lane :beta do
    sigh(
      adhoc: false,
      force: true
    )

    gym(
      configuration: "Beta",
      scheme: "Wikipedia Beta"
    )

    changelog = default_changelog

    hockey(
      public_identifier: '2295c3698bbd0b050f257772dd2bdbb2',
      notes: changelog,
      notify: '0', # Means do not notify
      status: '1', # Means do not make available for download
      upload_dsym_only: true
    )

    pilot(skip_submission: false, changelog: changelog)
  end

  desc "Upload a developer build to Hockey."
  lane :dev do
    sigh(
      adhoc: true,
      # Fastlane has issues forcing AdHoc profiles
      force: false
    )

    # force iTunes file sharing to be enabled (normally disabled for release builds)
    ENV['WMF_FORCE_ITUNES_FILE_SHARING'] = '1'
    # force debug menu to be shown
    ENV['WMF_FORCE_DEBUG_MENU'] = '1'

    gym(
      configuration: "AdHoc",
      scheme: "Wikipedia AdHoc",
      # both of these flags are required for ad hoc
      export_method: 'ad-hoc',
      use_legacy_build_api: true
    )

    hockey(
      notes: default_changelog,
      notify: '2', # Notify all testers
      status: '2', # Make available for download
      release_type: '2' # 'alpha' release type
    )
  end


  desc "Upload AdHoc \"Release Candidate\" build to Hockey."
  lane :rc do
    sigh(
      adhoc: true,
      # Fastlane has issues forcing AdHoc profiles
      force: false
    )

    # force iTunes file sharing to be enabled (normally disabled for release builds)
    ENV['WMF_FORCE_ITUNES_FILE_SHARING'] = '1'
    # force debug menu to be shown
    ENV['WMF_FORCE_DEBUG_MENU'] = '1'

    gym(
      configuration: "Release",
      scheme: "Wikipedia",
      # both of these flags are required for ad hoc
      export_method: 'ad-hoc',
      use_legacy_build_api: true,
      # override hockeyapp ID for release candidate so reports go corresponding RC "app"
      xcargs: 'WMF_HOCKEYAPP_IDENTIFIER=78e94cb597309a55d5bb99c839aa18a8'
    )

    hockey(
      notes: default_changelog,
      notify: '0', # Do not notify
      status: '2', # Make available for download
      release_type: '0' # 'beta' release type
    )
  end

  desc "Upload AppStore build to iTC & HockeyApp"
  lane :store do
    sigh(
      adhoc: false,
      force: true
    )

    gym(
      configuration: "Release",
      scheme: "Wikipedia"
    )


    hockey(
      notes: default_changelog,
      notify: '0', # Do not notify
      status: '1', # Do not make available for download
      release_type: '1', # 'store' release type
      upload_dsym_only: true
    )

    deliver force: true
  end

  after_all do |lane|

  end

  error do |lane, exception|
    `cat build/xcodebuild.log` if lane == "verify"
  end
end
